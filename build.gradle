plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.springdoc.openapi-gradle-plugin" version "1.8.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(22)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-docker-compose'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.1.4'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:mariadb'
	testImplementation 'org.testcontainers:junit-jupiter'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate6'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-resource-server'
	implementation group: 'com.c4-soft.springaddons', name: 'spring-addons-starter-oidc', version: '7.1.8'
	implementation group: 'com.c4-soft.springaddons', name: 'spring-addons-starter-oidc-test', version: '7.8.10'
}

tasks.named('test') {
	useJUnitPlatform()
	jvmArgs("-XX:+EnableDynamicAgentLoading")
}

tasks.create("smallTest", Test) {
	useJUnitPlatform({
		includeTags 'small'
	})
	jvmArgs("-XX:+EnableDynamicAgentLoading")
	mustRunAfter check
}

tasks.create("mediumTest", Test) {
	useJUnitPlatform({
		includeTags 'medium'
	})
	jvmArgs("-XX:+EnableDynamicAgentLoading")
	mustRunAfter check
}

tasks.create("largeTest", Test) {
	useJUnitPlatform({
		includeTags 'large'
	})
	jvmArgs("-XX:+EnableDynamicAgentLoading")
	mustRunAfter check
}